/*
import * as React from 'react'

const Colors = {
    "blue" : "#3219a3",
    "pink" : "#fc499f",
    "purple" : "#9110db",
    "red" : "#ff1010",
    "yellow" : "#b6a614",
    "green" : "#49af0d",
    "glb": "#19a36e",
    "rd": "#a3195b",
    "dark" : "#var(--color-black)0",
}

export const ThemeContext = React.createContext();

const  ThemeContextProvider = ({ children }) => {
  const getColorFromCookies = () => {
    if (typeof window !== `undefined`) {
      let cookies = document.cookie
          .split(';')
          .map(cookie => cookie.split('='))
          .reduce((accumulator, [key, value]) => ({ ...accumulator, [key.trim()]: decodeURIComponent(value) }), {});
      return cookies['color'] === undefined ? "blue" : cookies['color'];
    }else{
      return "blue";
    }
  }

  const [color, changeColor] = React.useState(getColorFromCookies());
    
  const setColor = (v) => {
    changeColor(v);
    if (typeof window !== `undefined`) {
      document.cookie = "color=" + v +";path=/";
    }
  }

  return (
    <ThemeContext.Provider value={{color, setColor}}>
      {children}
    </ThemeContext.Provider>
  );
};


const useColor = () => {
    const {color, setColor} = React.useContext(ThemeContext);
    const c = Colors[color];
    return(
        {c, setColor}
    );
}

export {Colors, useColor}
export default ThemeContextProvider;
*/