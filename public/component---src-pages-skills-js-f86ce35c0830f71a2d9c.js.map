{"version":3,"sources":["webpack://cv-site-rafal-gulewski/./src/pages/skills.js"],"names":["progL","TechnologyIcons","TiF","GE","renderSkillList","t","map","v","icon","name","lvl","pageTitle","children","className","s","Trans","Link","to"],"mappings":"kMAQMA,EAAQ,CACZ,CACE,KAAQC,gBACR,KAAQ,aACR,IAAO,GACP,CACA,KAAQA,UACR,KAAQ,OACR,IAAO,GACP,CACA,KAAQA,gBACR,KAAQ,UACR,IAAO,IAILC,EAAM,CACV,CACE,KAAQD,WACR,KAAQ,QACR,IAAO,GACP,CACA,KAAQA,WACR,KAAQ,eACR,IAAO,GACP,CACA,KAAQA,gBACR,KAAQ,UACR,IAAO,GACP,CACA,KAAQA,SACR,KAAQ,MACR,IAAO,IAILE,EAAK,CACT,CACE,KAAQF,WACR,KAAQ,QACR,IAAO,GACP,CACA,KAAQA,sBACR,KAAQ,mBACR,IAAO,IAILG,EAAkB,SAACC,GAAD,OAAOA,EAAEC,KAAI,SAACC,GAAD,OACnC,gBAAC,KAAD,CAAiBC,KAAMD,EAAC,KAAUE,KAAMF,EAAC,KAAUG,IAAKH,EAAC,UA0C3D,UAvCe,SAAC,GAA4B,EAA1BI,UAA0B,EAAfC,SAC3B,OACE,gBAAC,KAAD,KACA,4BACI,uBAAKC,UAAU,qBACf,gBAAC,KAAD,CAAQC,EAAE,iBACV,8DACA,uBAAKD,UAAU,QACb,uBAAKA,UAAU,YACb,0BAAI,gBAAC,EAAAE,MAAD,iBACJ,uBAAKF,UAAU,UAAUT,EAAgBJ,KAE3C,uBAAKa,UAAU,YACb,0BAAI,gBAAC,EAAAE,MAAD,iBACJ,uBAAKF,UAAU,UAAUT,EAAgBF,KAE3C,uBAAKW,UAAU,YACb,0BAAI,gBAAC,EAAAE,MAAD,iBACJ,uBAAKF,UAAU,UAAUT,EAAgBD,KAE3C,uBAAKU,UAAU,YACb,uBAAKA,UAAU,KACb,gBAAC,EAAAG,KAAD,CAAMC,GAAG,aACL,4BAAM,gBAAC,EAAAF,MAAD,iBACN,uBAAKF,UAAU,iBACb,uBAAKA,UAAU,eAO3B,gBAAC,KAAD,MACA,gBAAC,KAAD","file":"component---src-pages-skills-js-f86ce35c0830f71a2d9c.js","sourcesContent":["import * as React from 'react'\r\nimport {graphql} from 'gatsby';\r\nimport '../styles/skillsPage.css'\r\nimport { Navbar, TechnologyIcons, NeonSkillWindow, LanguageSettings, ColorSettings } from '../component/'\r\nimport {Trans} from 'gatsby-plugin-react-i18next';\r\nimport { Link } from 'gatsby'\r\nimport ThemeContextProvider from '../component/neonColor';\r\n\r\nconst progL = [\r\n  {\r\n    \"icon\": TechnologyIcons[\"JavaScript\"],\r\n    \"name\": \"JavaScript\",\r\n    \"lvl\": 2\r\n  },{\r\n    \"icon\": TechnologyIcons[\"Java\"],\r\n    \"name\": \"Java\",\r\n    \"lvl\": 2\r\n  },{\r\n    \"icon\": TechnologyIcons[\"C Sharp\"],\r\n    \"name\": \"C Sharp\",\r\n    \"lvl\": 1\r\n  }\r\n]\r\n\r\nconst TiF = [\r\n  {\r\n    \"icon\": TechnologyIcons[\"React\"],\r\n    \"name\": \"React\",\r\n    \"lvl\": 2\r\n  },{\r\n    \"icon\": TechnologyIcons[\"React\"],\r\n    \"name\": \"React-Native\",\r\n    \"lvl\": 1\r\n  },{\r\n    \"icon\": TechnologyIcons[\"Node.js\"],\r\n    \"name\": \"Node.js\",\r\n    \"lvl\": 1\r\n  },{\r\n    \"icon\": TechnologyIcons[\"Git\"],\r\n    \"name\": \"Git\",\r\n    \"lvl\": 2\r\n  }\r\n]\r\n\r\nconst GE = [\r\n  {\r\n    \"icon\": TechnologyIcons[\"Unity\"],\r\n    \"name\": \"Unity\",\r\n    \"lvl\": 1\r\n  },{\r\n    \"icon\": TechnologyIcons[\"GameMakerStudio2\"],\r\n    \"name\": \"GameMakerStudio2\",\r\n    \"lvl\": 1\r\n  }\r\n]\r\n\r\nconst renderSkillList = (t) => t.map((v) => \r\n  <NeonSkillWindow icon={v[\"icon\"]} name={v[\"name\"]} lvl={v[\"lvl\"]} />)\r\n\r\n// markup\r\nconst Layout = ({ pageTitle, children }) => {\r\n  return (\r\n    <ThemeContextProvider>\r\n    <main>\r\n        <div className=\"background-image\" />\r\n        <Navbar s=\"Umiejętności\" />\r\n        <title>Rafal Gulewski - Umiejętności</title>\r\n        <div className=\"cont\">\r\n          <div className=\"sec sec1\">\r\n            <t1><Trans>skills1</Trans></t1>\r\n            <div className=\"secIco\">{renderSkillList(progL)}</div>\r\n          </div>\r\n          <div className=\"sec sec1\">\r\n            <t1><Trans>skills2</Trans></t1>\r\n            <div className=\"secIco\">{renderSkillList(TiF)}</div>\r\n          </div>\r\n          <div className=\"sec sec1\">\r\n            <t1><Trans>skills3</Trans></t1>\r\n            <div className=\"secIco\">{renderSkillList(GE)}</div>\r\n          </div>\r\n          <div className=\"sec sec1\">\r\n            <div className=\"s\">\r\n              <Link to=\"/projects\" >\r\n                  <span><Trans>skills4</Trans></span>\r\n                  <div className=\"animatedArrow\">\r\n                    <div className=\"arrow\"/>\r\n                  </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <LanguageSettings />\r\n        <ColorSettings />\r\n    </main>\r\n    </ThemeContextProvider>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n\r\nexport const query = graphql`\r\n  query($language: String!) {\r\n    locales: allLocale(filter: {language: {eq: $language}}) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}