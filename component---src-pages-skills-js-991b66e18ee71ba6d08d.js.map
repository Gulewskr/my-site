{"version":3,"sources":["webpack://cv-site-rafal-gulewski/./src/pages/skills.js"],"names":["progL","TechnologyIcons","TiF","GE","renderSkillList","t","map","v","icon","name","lvl","StatInfo","useState","toggled","setToggled","id","role","tabIndex","className","onKeyPress","onClick","style","Trans","Skills","pageTitle","children","backgroundImage","background","Link","to"],"mappings":"kPAUMA,EAAQ,CACZ,CACE,KAAQC,gBACR,KAAQ,aACR,IAAO,GACP,CACA,KAAQA,UACR,KAAQ,OACR,IAAO,GACP,CACA,KAAQA,gBACR,KAAQ,UACR,IAAO,IAILC,EAAM,CACV,CACE,KAAQD,WACR,KAAQ,QACR,IAAO,GACP,CACA,KAAQA,WACR,KAAQ,eACR,IAAO,GACP,CACA,KAAQA,gBACR,KAAQ,UACR,IAAO,GACP,CACA,KAAQA,SACR,KAAQ,MACR,IAAO,IAILE,EAAK,CACT,CACE,KAAQF,WACR,KAAQ,QACR,IAAO,GACP,CACA,KAAQA,sBACR,KAAQ,mBACR,IAAO,IAILG,EAAkB,SAACC,GAAD,OAAOA,EAAEC,KAAI,SAACC,GAAD,OACnC,gBAAC,KAAD,CAAiBC,KAAMD,EAAC,KAAUE,KAAMF,EAAC,KAAUG,IAAKH,EAAC,UAErDI,EAAW,WACb,OAA8BC,eAAS,GAAhCC,EAAP,KAAgBC,EAAhB,KACA,OACE,gCACA,uBAAKC,GAAG,kBAAkBC,KAAK,SAASC,SAAS,IAAIC,UAAU,cAAcC,WAAY,kBAAML,GAAW,IAAOM,QAAS,kBAAMN,GAAW,KAA3I,QACO,uBAAKI,UAAU,QAAO,gBAAC,IAAD,QAE7B,uBAAKH,GAAG,WAAWC,KAAK,SAASC,SAAS,IAAIC,UAAU,cAAcC,WAAY,kBAAML,GAAW,IAASM,QAAS,kBAAMN,GAAW,IAAQO,MAAOR,EAAU,CAAC,UAAc,uBAAyB,IACrM,gCAAO,uBAAKK,UAAU,QAAO,gBAAC,IAAD,OAAoB,gBAAC,EAAAI,MAAD,cACjD,gCAAO,uBAAKJ,UAAU,QAAO,gBAAC,IAAD,OAAoB,gBAAC,EAAAI,MAAD,cACjD,gCAAO,uBAAKJ,UAAU,QAAO,gBAAC,IAAD,OAAoB,gBAAC,EAAAI,MAAD,cACjD,gCAAO,uBAAKJ,UAAU,QAAO,gBAAC,IAAD,OAAoB,gBAAC,EAAAI,MAAD,cACjD,gCAAO,uBAAKJ,UAAU,QAAO,gBAAC,IAAD,OAAoB,gBAAC,EAAAI,MAAD,iBAO1C,SAASC,EAAT,GACf,EADkCC,UAClC,EAD6CC,SAE3C,OACI,gBAAC,IAAD,KACA,8DACA,uBAAKP,UAAU,mBAAmBG,MAAO,CAACK,gBAAgB,OAAQC,IAAT,OACzD,4BACI,gBAAChB,EAAD,MACA,uBAAKO,UAAU,QACb,uBAAKA,UAAU,YACb,sBAAIA,UAAU,sBAAqB,gBAAC,EAAAI,MAAD,iBACnC,uBAAKJ,UAAU,UAAUd,EAAgBJ,KAE3C,uBAAKkB,UAAU,YACb,sBAAIA,UAAU,sBAAqB,gBAAC,EAAAI,MAAD,iBACnC,uBAAKJ,UAAU,UAAUd,EAAgBF,KAE3C,uBAAKgB,UAAU,YACb,sBAAIA,UAAU,sBAAqB,gBAAC,EAAAI,MAAD,iBACnC,uBAAKJ,UAAU,UAAUd,EAAgBD,KAE3C,uBAAKe,UAAU,YACb,uBAAKA,UAAU,eACb,gBAAC,EAAAU,KAAD,CAAMC,GAAG,aACL,4BAAM,gBAAC,EAAAP,MAAD,iBACN,uBAAKJ,UAAU,iBACb,uBAAKA,UAAU","file":"component---src-pages-skills-js-991b66e18ee71ba6d08d.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {graphql} from 'gatsby';\r\nimport '../styles/skillsPage.css'\r\nimport { TechnologyIcons, StarIconON, NeonSkillWindow } from '../component/'\r\nimport {Trans} from 'gatsby-plugin-react-i18next';\r\nimport { Link } from 'gatsby'\r\nimport background from '../images/bg.jpg'\r\n\r\nimport Layout from '../component/Layout';\r\n\r\nconst progL = [\r\n  {\r\n    \"icon\": TechnologyIcons[\"JavaScript\"],\r\n    \"name\": \"JavaScript\",\r\n    \"lvl\": 2\r\n  },{\r\n    \"icon\": TechnologyIcons[\"Java\"],\r\n    \"name\": \"Java\",\r\n    \"lvl\": 2\r\n  },{\r\n    \"icon\": TechnologyIcons[\"C Sharp\"],\r\n    \"name\": \"C Sharp\",\r\n    \"lvl\": 2\r\n  }\r\n]\r\n\r\nconst TiF = [\r\n  {\r\n    \"icon\": TechnologyIcons[\"React\"],\r\n    \"name\": \"React\",\r\n    \"lvl\": 2\r\n  },{\r\n    \"icon\": TechnologyIcons[\"React\"],\r\n    \"name\": \"React-Native\",\r\n    \"lvl\": 1\r\n  },{\r\n    \"icon\": TechnologyIcons[\"Node.js\"],\r\n    \"name\": \"Node.js\",\r\n    \"lvl\": 2\r\n  },{\r\n    \"icon\": TechnologyIcons[\"Git\"],\r\n    \"name\": \"Git\",\r\n    \"lvl\": 2\r\n  }\r\n]\r\n\r\nconst GE = [\r\n  {\r\n    \"icon\": TechnologyIcons[\"Unity\"],\r\n    \"name\": \"Unity\",\r\n    \"lvl\": 1\r\n  },{\r\n    \"icon\": TechnologyIcons[\"GameMakerStudio2\"],\r\n    \"name\": \"GameMakerStudio2\",\r\n    \"lvl\": 1\r\n  }\r\n]\r\n\r\nconst renderSkillList = (t) => t.map((v) => \r\n  <NeonSkillWindow icon={v[\"icon\"]} name={v[\"name\"]} lvl={v[\"lvl\"]} />)\r\n\r\nconst StatInfo = () => {\r\n    const [toggled, setToggled] = useState(false);\r\n    return(\r\n      <>\r\n      <div id=\"statinfo-toggle\" role=\"button\" tabIndex=\"0\" className=\"border-neon\" onKeyPress={() => setToggled(true)} onClick={() => setToggled(true)}>\r\n        Info <div className='star'><StarIconON /></div>\r\n      </div>\r\n      <div id=\"statinfo\" role=\"button\" tabIndex=\"0\" className=\"border-neon\" onKeyPress={() => setToggled(true)}   onClick={() => setToggled(false)} style={toggled ? {\"transform\" : \"translate(-100%, 0)\"} : {}}>\r\n        <div>1 <div className='star'><StarIconON /></div><Trans>lvl1</Trans></div>\r\n        <div>2 <div className='star'><StarIconON /></div><Trans>lvl2</Trans></div>\r\n        <div>3 <div className='star'><StarIconON /></div><Trans>lvl3</Trans></div>\r\n        <div>4 <div className='star'><StarIconON /></div><Trans>lvl4</Trans></div>\r\n        <div>5 <div className='star'><StarIconON /></div><Trans>lvl5</Trans></div>\r\n      </div>\r\n    </>\r\n    );\r\n}\r\n\r\n// markup\r\nexport default function Skills ({ pageTitle, children }) \r\n{\r\n  return (\r\n      <Layout>\r\n      <title>Rafal Gulewski - Umiejętności</title>\r\n      <div className=\"background-image\" style={{backgroundImage: `url(${background})`}} />\r\n      <main>\r\n          <StatInfo />\r\n          <div className=\"cont\">\r\n            <div className=\"sec sec1\">\r\n              <t1 className=\"text-neon-on-blink\"><Trans>skills1</Trans></t1>\r\n              <div className=\"secIco\">{renderSkillList(progL)}</div>\r\n            </div>\r\n            <div className=\"sec sec1\">\r\n              <t1 className=\"text-neon-on-blink\"><Trans>skills2</Trans></t1>\r\n              <div className=\"secIco\">{renderSkillList(TiF)}</div>\r\n            </div>\r\n            <div className=\"sec sec1\">\r\n              <t1 className=\"text-neon-on-blink\"><Trans>skills3</Trans></t1>\r\n              <div className=\"secIco\">{renderSkillList(GE)}</div>\r\n            </div>\r\n            <div className=\"sec sec1\">\r\n              <div className=\"s text-neon\">\r\n                <Link to=\"/projects\" >\r\n                    <span><Trans>skills4</Trans></span>\r\n                    <div className=\"animatedArrow\">\r\n                      <div className=\"arrow\"/>\r\n                    </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($language: String!) {\r\n    locales: allLocale(filter: {language: {eq: $language}}) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}