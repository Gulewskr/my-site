{"version":3,"sources":["webpack://cv-site-rafal-gulewski/./src/pages/projects.js"],"names":["TPr","Projects","pageTitle","children","className","style","backgroundImage","background","Trans","map","v","name","techs","link"],"mappings":"wOAUMA,EAAM,CACV,CACE,KAAQ,kCACR,MAAS,CAAC,QAAS,cACnB,KAAQ,gDACR,CACA,KAAQ,eACR,MAAS,CAAC,QACV,KAAQ,8CACR,CACA,KAAQ,kBACR,MAAS,CAAC,QACV,KAAQ,6CACR,CACA,KAAQ,yCACR,MAAS,CAAC,QACV,KAAQ,QACR,CACA,KAAQ,uBACR,MAAS,CAAC,aAAc,WACxB,KAAQ,kDACR,CACA,KAAQ,gBACR,MAAS,CAAC,aAAc,WACxB,KAAQ,gDACR,CACA,KAAQ,8BACR,MAAS,CAAC,WACV,KAAQ,yCACR,CACA,KAAQ,qDACR,MAAS,CAAC,OAAQ,cAClB,KAAQ,yCACR,CACA,KAAQ,SACR,MAAS,CAAC,QACV,KAAQ,6EACR,CACA,KAAQ,2BACR,MAAS,CAAC,QACV,KAAQ,gFAUG,SAASC,EAAT,GACf,EADoCC,UACpC,EAD+CC,SAE7C,OACI,gBAAC,IAAD,KACE,0DACA,4BACE,uBAAKC,UAAU,mBAAmBC,MAAO,CAACC,gBAAgB,OAAQC,IAAT,OACvD,uBAAKH,UAAU,gBACb,sBAAIA,UAAU,sBAAqB,gBAAC,EAAAI,MAAD,cACnC,uBAAKJ,UAAU,SACMJ,EAhBAS,KAAK,SAACC,GAAD,OAClC,uBAAKN,UAAU,YACb,gBAAC,KAAD,CAAmBO,KAAMD,EAAC,KAAUE,MAAOF,EAAC,MAAWG,KAAMH,EAAC,YAgBxD,uBAAKN,UAAU,YAAYC,MAAO,CAAC,SAAY,SAA/C,WACU,gBAAC,EAAAG,MAAD","file":"component---src-pages-projects-js-3f7ca84755737014fe40.js","sourcesContent":["import * as React from 'react'\r\nimport {graphql} from 'gatsby';\r\nimport '../styles/pageStyle.css'\r\nimport '../styles/projectStyle.css'\r\nimport {NeonProjectWindow} from '../component/'\r\nimport {Trans} from 'gatsby-plugin-react-i18next';\r\nimport background from '../images/bg.jpg'\r\n\r\nimport Layout from '../component/Layout';\r\n\r\nconst TPr = [\r\n  {\r\n    \"name\": \"Mobile-organizer - React Native\", \r\n    \"techs\": [\"React\", \"JavaScript\"], \r\n    \"link\": \"https://github.com/Gulewskr/mobile-organizer\"\r\n  },{\r\n    \"name\": \"'Blockudoku'\", \r\n    \"techs\": [\"Java\"], \r\n    \"link\": \"https://github.com/Gulewskr/Blockudoku_PIO\"\r\n  },{\r\n    \"name\": \"'Tanki Offline'\", \r\n    \"techs\": [\"Java\"], \r\n    \"link\": \"https://github.com/Gulewskr/Tanki_Offline\"\r\n  },{\r\n    \"name\": \"Algorithms and data structures project\", \r\n    \"techs\": [\"Java\"], \r\n    \"link\": \"/404\"\r\n  },{\r\n    \"name\": \"JSON-Generator üë∑‚Äç‚ôÇÔ∏è\", \r\n    \"techs\": [\"JavaScript\", \"Node.js\"], \r\n    \"link\": \"https://github.com/Gulewskr/Patients-Generator\"\r\n  },{\r\n    \"name\": \"Recipes Forum\", \r\n    \"techs\": [\"JavaScript\", \"Node.js\"], \r\n    \"link\": \"https://github.com/Gulewskr/App-RecipesForum\"\r\n  },{\r\n    \"name\": \"Game shop üë∑‚Äç‚ôÇÔ∏è - .net core\", \r\n    \"techs\": [\"C Sharp\"], \r\n    \"link\": \"https://github.com/Gulewskr/game-shop\"\r\n  },{\r\n    \"name\": \"Streaming platform üë∑‚Äç‚ôÇÔ∏è - Java Spring, TS (React)\", \r\n    \"techs\": [\"Java\", \"JavaScript\"], \r\n    \"link\": \"https://github.com/Gulewskr/game-shop\"\r\n  },{\r\n    \"name\": \"Tetris\", \r\n    \"techs\": [\"Java\"], \r\n    \"link\": \"https://github.com/biedrzyd/testowanie_oprogramowania1/tree/master/Tetris\"\r\n  },{\r\n    \"name\": \"Simple todo app - Javafx\", \r\n    \"techs\": [\"Java\"], \r\n    \"link\": \"https://github.com/biedrzyd/testowanie_oprogramowania1/tree/master/todo-app\"\r\n  },\r\n]\r\n\r\nconst renderProjectList = (t) => t.map( (v) => \r\n      <div className=\"ctl-wind\">\r\n        <NeonProjectWindow name={v[\"name\"]} techs={v[\"techs\"]} link={v[\"link\"]}/>\r\n      </div>\r\n    )\r\n\r\nexport default function Projects ({ pageTitle, children }) \r\n{\r\n  return (\r\n      <Layout>\r\n        <title>Rafal Gulewski - Projekty</title>\r\n        <main>\r\n          <div className=\"background-image\" style={{backgroundImage: `url(${background})`}} />\r\n            <div className=\"projects-ctl\">\r\n              <t1 className=\"text-neon-on-blink\"><Trans>proj</Trans></t1> \r\n              <div className=\"ctl-m\">\r\n                {renderProjectList(TPr)}\r\n              </div>\r\n              <div className='text-neon' style={{'fontSize': '20px'}}>\r\n                üë∑‚Äç‚ôÇÔ∏è - <Trans>projInfo</Trans>\r\n              </div>\r\n            </div>\r\n        </main>\r\n      </Layout> \r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($language: String!) {\r\n    locales: allLocale(filter: {language: {eq: $language}}) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}